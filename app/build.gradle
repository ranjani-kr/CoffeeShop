/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.5'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.seleniumhq.selenium:selenium-java:4.10.0'


    implementation 'io.github.bonigarcia:webdrivermanager:5.4.1'
    //testImplementation("io.github.bonigarcia:webdrivermanager:5.4.1")

    implementation('org.projectlombok:lombok:1.18.20')
    annotationProcessor('org.projectlombok:lombok:1.18.20')
    testImplementation('org.projectlombok:lombok:1.18.20')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.20')

    implementation 'com.github.javafaker:javafaker:1.0.2'


}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'coffeeshop.App'
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}

task runWebTests(type: Test) {
    outputs.upToDateWhen { false }
    useTestNG {
        useDefaultListeners true
        outputDirectory = file("$buildDir/web-reports")
    }
}

test {
    // Use TestNG for unit tests
    useTestNG()
}

tasks.withType(Test) {
    systemProperties System.properties
}

